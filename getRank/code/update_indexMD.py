import os, json
from datetime import datetime
# reads current md
# append contest row
MDFileLocation = 'C:/Users/lifeiteng/projects/visualizer/getRank/JPLAGResult/index.md'

# text = ""
# with open(MDFileLocation, 'r') as f:
#     text = f.read()

JPLagResultFolder = 'C:/Users/lifeiteng/projects/visualizer/getRank/JPLAGResult'
JSONFileFolder = 'C:/Users/lifeiteng/projects/visualizer/getRank/Contest JSON/'

contestNames = [] #[205, 206, 207, 208, 209, 210]

for folder in os.scandir(JPLagResultFolder):
    # path = os.path.abspath(folder) + '/'
    # print(path)
    if folder.is_dir() and folder.name != '.git':
        contestNames.append(folder.name)

rowDict = {}
contestTimeDict = {}

for contest in contestNames:
    try:
        contest = str(contest)
        # get contest finish time
        contest_JSON_File = JSONFileFolder + contest + '/1.json'
        contest_finish_time = 0
        with open(contest_JSON_File) as file:
            str_response = json.load(file)
            contest_finish_time = str_response['time']
        if contest.startswith('CN'): continue
        contestPath = JPLagResultFolder + '/' + contest
        questionList = []
        for folder in os.scandir(contestPath + '/cppResult'):
            questionList.append(folder.name)

        contest = str(contest)
        codingLanguages = ['cpp', 'java', 'python3']
        linkBase = 'https://feiteng.github.io/ContestResult/'

        linkBase += contest + '/'

        text = '\n|' + contest + '|'
        for question in questionList:
            question = str(question)
            text += question
            for codingLanguage in codingLanguages:
                tmpLink = linkBase + codingLanguage + 'Result/' + question + '/index.html'
                text += ' [' + codingLanguage + '](' + tmpLink + ')'
            text += '|'
        lastModified = os.path.getctime(JPLagResultFolder + '/' + contest)
        lastModified = datetime.fromtimestamp(lastModified).strftime('%Y/%m/%d')
        text += str(lastModified) + '|'
        rowDict[contest] = text
        contestTimeDict[contest_finish_time] = contest
    except Exception as err:
        print("error msg... %s" % err)
        pass


banner = '**Code compare results generated by [JPLag](https://github.com/jplag/jplag)**\n\n' \
         'All comments welcomed\n\n' \
         '|Contest|Question||||Last Modified|\n' \
         '|-|-|-|-|-|-|'

MDFileLocation2 = 'C:/Users/lifeiteng/projects/visualizer/getRank/JPLAGResult/test.md'
f = open(MDFileLocation, 'w')
f.write(banner)
for key in sorted(rowDict.keys(), reverse = True):
    # contestKey = contestTimeDict[key]
    # print(contestKey)
    f.write(rowDict[key])
f.close()
